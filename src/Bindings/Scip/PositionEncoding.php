<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: scip.proto

namespace Scip;

use UnexpectedValueException;

/**
 * Encoding used to interpret the 'character' value in source ranges.
 *
 * Protobuf type <code>scip.PositionEncoding</code>
 */
class PositionEncoding
{
    /**
     * Default value. This value should not be used by new SCIP indexers
     * so that a consumer can process the SCIP index without ambiguity.
     *
     * Generated from protobuf enum <code>UnspecifiedPositionEncoding = 0;</code>
     */
    const UnspecifiedPositionEncoding = 0;
    /**
     * The 'character' value is interpreted as an offset in terms
     * of UTF-8 code units (i.e. bytes).
     * Example: For the string "ðŸš€ Woo" in UTF-8, the bytes are
     * [240, 159, 154, 128, 32, 87, 111, 111], so the offset for 'W'
     * would be 5.
     *
     * Generated from protobuf enum <code>UTF8CodeUnitOffsetFromLineStart = 1;</code>
     */
    const UTF8CodeUnitOffsetFromLineStart = 1;
    /**
     * The 'character' value is interpreted as an offset in terms
     * of UTF-16 code units (each is 2 bytes).
     * Example: For the string "ðŸš€ Woo", the UTF-16 code units are
     * ['\ud83d', '\ude80', ' ', 'W', 'o', 'o'], so the offset for 'W'
     * would be 3.
     *
     * Generated from protobuf enum <code>UTF16CodeUnitOffsetFromLineStart = 2;</code>
     */
    const UTF16CodeUnitOffsetFromLineStart = 2;
    /**
     * The 'character' value is interpreted as an offset in terms
     * of UTF-32 code units (each is 4 bytes).
     * Example: For the string "ðŸš€ Woo", the UTF-32 code units are
     * ['ðŸš€', ' ', 'W', 'o', 'o'], so the offset for 'W' would be 2.
     *
     * Generated from protobuf enum <code>UTF32CodeUnitOffsetFromLineStart = 3;</code>
     */
    const UTF32CodeUnitOffsetFromLineStart = 3;

    private static $valueToName = [
        self::UnspecifiedPositionEncoding => 'UnspecifiedPositionEncoding',
        self::UTF8CodeUnitOffsetFromLineStart => 'UTF8CodeUnitOffsetFromLineStart',
        self::UTF16CodeUnitOffsetFromLineStart => 'UTF16CodeUnitOffsetFromLineStart',
        self::UTF32CodeUnitOffsetFromLineStart => 'UTF32CodeUnitOffsetFromLineStart',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

