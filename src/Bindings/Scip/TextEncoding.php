<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: scip.proto

namespace Scip;

use UnexpectedValueException;

/**
 * Protobuf type <code>scip.TextEncoding</code>
 */
class TextEncoding
{
    /**
     * Generated from protobuf enum <code>UnspecifiedTextEncoding = 0;</code>
     */
    const UnspecifiedTextEncoding = 0;
    /**
     * Generated from protobuf enum <code>UTF8 = 1;</code>
     */
    const UTF8 = 1;
    /**
     * Generated from protobuf enum <code>UTF16 = 2;</code>
     */
    const UTF16 = 2;

    private static $valueToName = [
        self::UnspecifiedTextEncoding => 'UnspecifiedTextEncoding',
        self::UTF8 => 'UTF8',
        self::UTF16 => 'UTF16',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

