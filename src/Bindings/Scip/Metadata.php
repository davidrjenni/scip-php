<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: scip.proto

namespace Scip;

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>scip.Metadata</code>
 */
class Metadata extends \Google\Protobuf\Internal\Message
{
    /**
     * Which version of this protocol was used to generate this index?
     *
     * Generated from protobuf field <code>.scip.ProtocolVersion version = 1;</code>
     */
    protected $version = 0;
    /**
     * Information about the tool that produced this index.
     *
     * Generated from protobuf field <code>.scip.ToolInfo tool_info = 2;</code>
     */
    protected $tool_info = null;
    /**
     * URI-encoded absolute path to the root directory of this index. All
     * documents in this index must appear in a subdirectory of this root
     * directory.
     *
     * Generated from protobuf field <code>string project_root = 3;</code>
     */
    protected $project_root = '';
    /**
     * Text encoding of the source files on disk that are referenced from
     * `Document.relative_path`. This value is unrelated to the `Document.text`
     * field, which is a Protobuf string and hence must be UTF-8 encoded.
     *
     * Generated from protobuf field <code>.scip.TextEncoding text_document_encoding = 4;</code>
     */
    protected $text_document_encoding = 0;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type int $version
     *           Which version of this protocol was used to generate this index?
     *     @type \Scip\ToolInfo $tool_info
     *           Information about the tool that produced this index.
     *     @type string $project_root
     *           URI-encoded absolute path to the root directory of this index. All
     *           documents in this index must appear in a subdirectory of this root
     *           directory.
     *     @type int $text_document_encoding
     *           Text encoding of the source files on disk that are referenced from
     *           `Document.relative_path`. This value is unrelated to the `Document.text`
     *           field, which is a Protobuf string and hence must be UTF-8 encoded.
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\Scip::initOnce();
        parent::__construct($data);
    }

    /**
     * Which version of this protocol was used to generate this index?
     *
     * Generated from protobuf field <code>.scip.ProtocolVersion version = 1;</code>
     * @return int
     */
    public function getVersion()
    {
        return $this->version;
    }

    /**
     * Which version of this protocol was used to generate this index?
     *
     * Generated from protobuf field <code>.scip.ProtocolVersion version = 1;</code>
     * @param int $var
     * @return $this
     */
    public function setVersion($var)
    {
        GPBUtil::checkEnum($var, \Scip\ProtocolVersion::class);
        $this->version = $var;

        return $this;
    }

    /**
     * Information about the tool that produced this index.
     *
     * Generated from protobuf field <code>.scip.ToolInfo tool_info = 2;</code>
     * @return \Scip\ToolInfo|null
     */
    public function getToolInfo()
    {
        return $this->tool_info;
    }

    public function hasToolInfo()
    {
        return isset($this->tool_info);
    }

    public function clearToolInfo()
    {
        unset($this->tool_info);
    }

    /**
     * Information about the tool that produced this index.
     *
     * Generated from protobuf field <code>.scip.ToolInfo tool_info = 2;</code>
     * @param \Scip\ToolInfo $var
     * @return $this
     */
    public function setToolInfo($var)
    {
        GPBUtil::checkMessage($var, \Scip\ToolInfo::class);
        $this->tool_info = $var;

        return $this;
    }

    /**
     * URI-encoded absolute path to the root directory of this index. All
     * documents in this index must appear in a subdirectory of this root
     * directory.
     *
     * Generated from protobuf field <code>string project_root = 3;</code>
     * @return string
     */
    public function getProjectRoot()
    {
        return $this->project_root;
    }

    /**
     * URI-encoded absolute path to the root directory of this index. All
     * documents in this index must appear in a subdirectory of this root
     * directory.
     *
     * Generated from protobuf field <code>string project_root = 3;</code>
     * @param string $var
     * @return $this
     */
    public function setProjectRoot($var)
    {
        GPBUtil::checkString($var, True);
        $this->project_root = $var;

        return $this;
    }

    /**
     * Text encoding of the source files on disk that are referenced from
     * `Document.relative_path`. This value is unrelated to the `Document.text`
     * field, which is a Protobuf string and hence must be UTF-8 encoded.
     *
     * Generated from protobuf field <code>.scip.TextEncoding text_document_encoding = 4;</code>
     * @return int
     */
    public function getTextDocumentEncoding()
    {
        return $this->text_document_encoding;
    }

    /**
     * Text encoding of the source files on disk that are referenced from
     * `Document.relative_path`. This value is unrelated to the `Document.text`
     * field, which is a Protobuf string and hence must be UTF-8 encoded.
     *
     * Generated from protobuf field <code>.scip.TextEncoding text_document_encoding = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setTextDocumentEncoding($var)
    {
        GPBUtil::checkEnum($var, \Scip\TextEncoding::class);
        $this->text_document_encoding = $var;

        return $this;
    }

}

