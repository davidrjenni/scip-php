<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: scip.proto

namespace Scip;

use UnexpectedValueException;

/**
 * Language standardises names of common programming languages that can be used
 * for the `Document.language` field. The primary purpose of this enum is to
 * prevent a situation where we have a single programming language ends up with
 * multiple string representations. For example, the C++ language uses the name
 * "CPlusPlus" in this enum and other names such as "cpp" are incompatible.
 * Feel free to send a pull-request to add missing programming languages.
 *
 * Protobuf type <code>scip.Language</code>
 */
class Language
{
    /**
     * Generated from protobuf enum <code>UnspecifiedLanguage = 0;</code>
     */
    const UnspecifiedLanguage = 0;
    /**
     * Generated from protobuf enum <code>ABAP = 60;</code>
     */
    const ABAP = 60;
    /**
     * Generated from protobuf enum <code>APL = 49;</code>
     */
    const APL = 49;
    /**
     * Generated from protobuf enum <code>Ada = 39;</code>
     */
    const Ada = 39;
    /**
     * Generated from protobuf enum <code>Agda = 45;</code>
     */
    const Agda = 45;
    /**
     * Generated from protobuf enum <code>AsciiDoc = 86;</code>
     */
    const AsciiDoc = 86;
    /**
     * Generated from protobuf enum <code>Assembly = 58;</code>
     */
    const Assembly = 58;
    /**
     * Generated from protobuf enum <code>Awk = 66;</code>
     */
    const Awk = 66;
    /**
     * Generated from protobuf enum <code>Bat = 68;</code>
     */
    const Bat = 68;
    /**
     * Generated from protobuf enum <code>BibTeX = 81;</code>
     */
    const BibTeX = 81;
    /**
     * Generated from protobuf enum <code>C = 34;</code>
     */
    const C = 34;
    /**
     * Generated from protobuf enum <code>COBOL = 59;</code>
     */
    const COBOL = 59;
    /**
     * C++ (the name "CPP" was chosen for consistency with LSP)
     *
     * Generated from protobuf enum <code>CPP = 35;</code>
     */
    const CPP = 35;
    /**
     * Generated from protobuf enum <code>CSS = 26;</code>
     */
    const CSS = 26;
    /**
     * Generated from protobuf enum <code>CSharp = 1;</code>
     */
    const CSharp = 1;
    /**
     * Generated from protobuf enum <code>Clojure = 8;</code>
     */
    const Clojure = 8;
    /**
     * Generated from protobuf enum <code>Coffeescript = 21;</code>
     */
    const Coffeescript = 21;
    /**
     * Generated from protobuf enum <code>CommonLisp = 9;</code>
     */
    const CommonLisp = 9;
    /**
     * Generated from protobuf enum <code>Coq = 47;</code>
     */
    const Coq = 47;
    /**
     * Generated from protobuf enum <code>Dart = 3;</code>
     */
    const Dart = 3;
    /**
     * Generated from protobuf enum <code>Delphi = 57;</code>
     */
    const Delphi = 57;
    /**
     * Generated from protobuf enum <code>Diff = 88;</code>
     */
    const Diff = 88;
    /**
     * Generated from protobuf enum <code>Dockerfile = 80;</code>
     */
    const Dockerfile = 80;
    /**
     * Generated from protobuf enum <code>Dyalog = 50;</code>
     */
    const Dyalog = 50;
    /**
     * Generated from protobuf enum <code>Elixir = 17;</code>
     */
    const Elixir = 17;
    /**
     * Generated from protobuf enum <code>Erlang = 18;</code>
     */
    const Erlang = 18;
    /**
     * Generated from protobuf enum <code>FSharp = 42;</code>
     */
    const FSharp = 42;
    /**
     * Generated from protobuf enum <code>Fish = 65;</code>
     */
    const Fish = 65;
    /**
     * Generated from protobuf enum <code>Flow = 24;</code>
     */
    const Flow = 24;
    /**
     * Generated from protobuf enum <code>Fortran = 56;</code>
     */
    const Fortran = 56;
    /**
     * Generated from protobuf enum <code>Git_Commit = 91;</code>
     */
    const Git_Commit = 91;
    /**
     * Generated from protobuf enum <code>Git_Config = 89;</code>
     */
    const Git_Config = 89;
    /**
     * Generated from protobuf enum <code>Git_Rebase = 92;</code>
     */
    const Git_Rebase = 92;
    /**
     * Generated from protobuf enum <code>Go = 33;</code>
     */
    const Go = 33;
    /**
     * Generated from protobuf enum <code>Groovy = 7;</code>
     */
    const Groovy = 7;
    /**
     * Generated from protobuf enum <code>HTML = 30;</code>
     */
    const HTML = 30;
    /**
     * Generated from protobuf enum <code>Hack = 20;</code>
     */
    const Hack = 20;
    /**
     * Generated from protobuf enum <code>Handlebars = 90;</code>
     */
    const Handlebars = 90;
    /**
     * Generated from protobuf enum <code>Haskell = 44;</code>
     */
    const Haskell = 44;
    /**
     * Generated from protobuf enum <code>Idris = 46;</code>
     */
    const Idris = 46;
    /**
     * Generated from protobuf enum <code>Ini = 72;</code>
     */
    const Ini = 72;
    /**
     * Generated from protobuf enum <code>J = 51;</code>
     */
    const J = 51;
    /**
     * Generated from protobuf enum <code>JSON = 75;</code>
     */
    const JSON = 75;
    /**
     * Generated from protobuf enum <code>Java = 6;</code>
     */
    const Java = 6;
    /**
     * Generated from protobuf enum <code>JavaScript = 22;</code>
     */
    const JavaScript = 22;
    /**
     * Generated from protobuf enum <code>JavaScriptReact = 93;</code>
     */
    const JavaScriptReact = 93;
    /**
     * Generated from protobuf enum <code>Jsonnet = 76;</code>
     */
    const Jsonnet = 76;
    /**
     * Generated from protobuf enum <code>Julia = 55;</code>
     */
    const Julia = 55;
    /**
     * Generated from protobuf enum <code>Kotlin = 4;</code>
     */
    const Kotlin = 4;
    /**
     * Generated from protobuf enum <code>LaTeX = 83;</code>
     */
    const LaTeX = 83;
    /**
     * Generated from protobuf enum <code>Lean = 48;</code>
     */
    const Lean = 48;
    /**
     * Generated from protobuf enum <code>Less = 27;</code>
     */
    const Less = 27;
    /**
     * Generated from protobuf enum <code>Lua = 12;</code>
     */
    const Lua = 12;
    /**
     * Generated from protobuf enum <code>Makefile = 79;</code>
     */
    const Makefile = 79;
    /**
     * Generated from protobuf enum <code>Markdown = 84;</code>
     */
    const Markdown = 84;
    /**
     * Generated from protobuf enum <code>Matlab = 52;</code>
     */
    const Matlab = 52;
    /**
     * Generated from protobuf enum <code>Nix = 77;</code>
     */
    const Nix = 77;
    /**
     * Generated from protobuf enum <code>OCaml = 41;</code>
     */
    const OCaml = 41;
    /**
     * Generated from protobuf enum <code>Objective_C = 36;</code>
     */
    const Objective_C = 36;
    /**
     * Generated from protobuf enum <code>Objective_CPP = 37;</code>
     */
    const Objective_CPP = 37;
    /**
     * Generated from protobuf enum <code>PHP = 19;</code>
     */
    const PHP = 19;
    /**
     * Generated from protobuf enum <code>PLSQL = 70;</code>
     */
    const PLSQL = 70;
    /**
     * Generated from protobuf enum <code>Perl = 13;</code>
     */
    const Perl = 13;
    /**
     * Generated from protobuf enum <code>PowerShell = 67;</code>
     */
    const PowerShell = 67;
    /**
     * Generated from protobuf enum <code>Prolog = 71;</code>
     */
    const Prolog = 71;
    /**
     * Generated from protobuf enum <code>Python = 15;</code>
     */
    const Python = 15;
    /**
     * Generated from protobuf enum <code>R = 54;</code>
     */
    const R = 54;
    /**
     * Generated from protobuf enum <code>Racket = 11;</code>
     */
    const Racket = 11;
    /**
     * Generated from protobuf enum <code>Raku = 14;</code>
     */
    const Raku = 14;
    /**
     * Generated from protobuf enum <code>Razor = 62;</code>
     */
    const Razor = 62;
    /**
     * Generated from protobuf enum <code>ReST = 85;</code>
     */
    const ReST = 85;
    /**
     * Generated from protobuf enum <code>Ruby = 16;</code>
     */
    const Ruby = 16;
    /**
     * Generated from protobuf enum <code>Rust = 40;</code>
     */
    const Rust = 40;
    /**
     * Generated from protobuf enum <code>SAS = 61;</code>
     */
    const SAS = 61;
    /**
     * Generated from protobuf enum <code>SCSS = 29;</code>
     */
    const SCSS = 29;
    /**
     * Generated from protobuf enum <code>SML = 43;</code>
     */
    const SML = 43;
    /**
     * Generated from protobuf enum <code>SQL = 69;</code>
     */
    const SQL = 69;
    /**
     * Generated from protobuf enum <code>Sass = 28;</code>
     */
    const Sass = 28;
    /**
     * Generated from protobuf enum <code>Scala = 5;</code>
     */
    const Scala = 5;
    /**
     * Generated from protobuf enum <code>Scheme = 10;</code>
     */
    const Scheme = 10;
    /**
     * Bash
     *
     * Generated from protobuf enum <code>ShellScript = 64;</code>
     */
    const ShellScript = 64;
    /**
     * Generated from protobuf enum <code>Skylark = 78;</code>
     */
    const Skylark = 78;
    /**
     * Generated from protobuf enum <code>Swift = 2;</code>
     */
    const Swift = 2;
    /**
     * Generated from protobuf enum <code>TOML = 73;</code>
     */
    const TOML = 73;
    /**
     * Generated from protobuf enum <code>TeX = 82;</code>
     */
    const TeX = 82;
    /**
     * Generated from protobuf enum <code>TypeScript = 23;</code>
     */
    const TypeScript = 23;
    /**
     * Generated from protobuf enum <code>TypeScriptReact = 94;</code>
     */
    const TypeScriptReact = 94;
    /**
     * Generated from protobuf enum <code>VisualBasic = 63;</code>
     */
    const VisualBasic = 63;
    /**
     * Generated from protobuf enum <code>Vue = 25;</code>
     */
    const Vue = 25;
    /**
     * Generated from protobuf enum <code>Wolfram = 53;</code>
     */
    const Wolfram = 53;
    /**
     * Generated from protobuf enum <code>XML = 31;</code>
     */
    const XML = 31;
    /**
     * Generated from protobuf enum <code>XSL = 32;</code>
     */
    const XSL = 32;
    /**
     * Generated from protobuf enum <code>YAML = 74;</code>
     */
    const YAML = 74;
    /**
     * NextLanguage = 95;
     * Steps add a new language:
     * 1. Copy-paste the "NextLanguage = N" line above
     * 2. Increment "NextLanguage = N" to "NextLanguage = N+1"
     * 3. Replace "NextLanguage = N" with the name of the new language.
     * 4. Move the new language to the correct line above using alphabetical order
     * 5. (optional) Add a brief comment behind the language if the name is not self-explanatory
     *
     * Generated from protobuf enum <code>Zig = 38;</code>
     */
    const Zig = 38;

    private static $valueToName = [
        self::UnspecifiedLanguage => 'UnspecifiedLanguage',
        self::ABAP => 'ABAP',
        self::APL => 'APL',
        self::Ada => 'Ada',
        self::Agda => 'Agda',
        self::AsciiDoc => 'AsciiDoc',
        self::Assembly => 'Assembly',
        self::Awk => 'Awk',
        self::Bat => 'Bat',
        self::BibTeX => 'BibTeX',
        self::C => 'C',
        self::COBOL => 'COBOL',
        self::CPP => 'CPP',
        self::CSS => 'CSS',
        self::CSharp => 'CSharp',
        self::Clojure => 'Clojure',
        self::Coffeescript => 'Coffeescript',
        self::CommonLisp => 'CommonLisp',
        self::Coq => 'Coq',
        self::Dart => 'Dart',
        self::Delphi => 'Delphi',
        self::Diff => 'Diff',
        self::Dockerfile => 'Dockerfile',
        self::Dyalog => 'Dyalog',
        self::Elixir => 'Elixir',
        self::Erlang => 'Erlang',
        self::FSharp => 'FSharp',
        self::Fish => 'Fish',
        self::Flow => 'Flow',
        self::Fortran => 'Fortran',
        self::Git_Commit => 'Git_Commit',
        self::Git_Config => 'Git_Config',
        self::Git_Rebase => 'Git_Rebase',
        self::Go => 'Go',
        self::Groovy => 'Groovy',
        self::HTML => 'HTML',
        self::Hack => 'Hack',
        self::Handlebars => 'Handlebars',
        self::Haskell => 'Haskell',
        self::Idris => 'Idris',
        self::Ini => 'Ini',
        self::J => 'J',
        self::JSON => 'JSON',
        self::Java => 'Java',
        self::JavaScript => 'JavaScript',
        self::JavaScriptReact => 'JavaScriptReact',
        self::Jsonnet => 'Jsonnet',
        self::Julia => 'Julia',
        self::Kotlin => 'Kotlin',
        self::LaTeX => 'LaTeX',
        self::Lean => 'Lean',
        self::Less => 'Less',
        self::Lua => 'Lua',
        self::Makefile => 'Makefile',
        self::Markdown => 'Markdown',
        self::Matlab => 'Matlab',
        self::Nix => 'Nix',
        self::OCaml => 'OCaml',
        self::Objective_C => 'Objective_C',
        self::Objective_CPP => 'Objective_CPP',
        self::PHP => 'PHP',
        self::PLSQL => 'PLSQL',
        self::Perl => 'Perl',
        self::PowerShell => 'PowerShell',
        self::Prolog => 'Prolog',
        self::Python => 'Python',
        self::R => 'R',
        self::Racket => 'Racket',
        self::Raku => 'Raku',
        self::Razor => 'Razor',
        self::ReST => 'ReST',
        self::Ruby => 'Ruby',
        self::Rust => 'Rust',
        self::SAS => 'SAS',
        self::SCSS => 'SCSS',
        self::SML => 'SML',
        self::SQL => 'SQL',
        self::Sass => 'Sass',
        self::Scala => 'Scala',
        self::Scheme => 'Scheme',
        self::ShellScript => 'ShellScript',
        self::Skylark => 'Skylark',
        self::Swift => 'Swift',
        self::TOML => 'TOML',
        self::TeX => 'TeX',
        self::TypeScript => 'TypeScript',
        self::TypeScriptReact => 'TypeScriptReact',
        self::VisualBasic => 'VisualBasic',
        self::Vue => 'Vue',
        self::Wolfram => 'Wolfram',
        self::XML => 'XML',
        self::XSL => 'XSL',
        self::YAML => 'YAML',
        self::Zig => 'Zig',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

