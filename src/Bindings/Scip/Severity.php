<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: scip.proto

namespace Scip;

use UnexpectedValueException;

/**
 * Protobuf type <code>scip.Severity</code>
 */
class Severity
{
    /**
     * Generated from protobuf enum <code>UnspecifiedSeverity = 0;</code>
     */
    const UnspecifiedSeverity = 0;
    /**
     * Generated from protobuf enum <code>Error = 1;</code>
     */
    const Error = 1;
    /**
     * Generated from protobuf enum <code>Warning = 2;</code>
     */
    const Warning = 2;
    /**
     * Generated from protobuf enum <code>Information = 3;</code>
     */
    const Information = 3;
    /**
     * Generated from protobuf enum <code>Hint = 4;</code>
     */
    const Hint = 4;

    private static $valueToName = [
        self::UnspecifiedSeverity => 'UnspecifiedSeverity',
        self::Error => 'Error',
        self::Warning => 'Warning',
        self::Information => 'Information',
        self::Hint => 'Hint',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

